Error management
Carry out AT LEAST the following tests to try to stress the error
management.
- Pass an arbitrary file descriptor to the get_next_line function on
which it is not possible to read, for example 42. The function must
return NULL.
- Check the error returns for read and malloc.
If there is an error, the evaluation stops here.
You can keep going and discuss the implementation of the code,
but the assignment will not be graded.

Testing
As the evaluator, you are expected to provide a main which will always check:
- The return value of the get_next_line is NULL in case of error.
- Otherwise, the function returns the line read, always with a \n at the end.
Test all the possible combinations of the following rules:

- Large BUFFER_SIZE (>1024)
- Small BUFFER_SIZE (< 8, and 1)
- BUFFER_SIZE exactly the length of the line to read
- 1 byte variant (+/-) between the line and the BUFFER_SIZE

- Read on stdin
- Read from a file

- (Multiple/Single) Long line (2k+ characters)
- (Multiple/Single) Short line (< 4 characters, even 1)
- (Multiple/Single) Empty line

These tests should enable you to verify the strength of the student's
get_next_line.
If there is an error, the evaluation stops here.